# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: build_and_test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  registry: my_registry_name
  DB_HOST: localhost
  DB_USERNAME: postgres
  DB_PASSWORD: postgres

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        architecture: x64
        cache: 'maven'
        
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.2
      with:
        maven-version: 3.8.2

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Verify
      working-directory: github-actions-java-maven
      run: |
        mvn clean compile test-compile && mvn verify
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GIT_TOKEN }}
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifact.jar
        path: github-actions-java-maven/target/github-actions-java-maven.jar

#    - run: "mkdir staging && cp target/*jar-with-dependencies.jar staging"
#    - uses: docker/setup-qemu-action@v1
#    - uses: docker/setup-buildx-action@v1
#    - name: "Login to DockerHub"
#      uses: docker/login-action@v1
#      with:
#        password: "${{ secrets.DOCKERHUB_TOKEN }}"
#        username: "${{ secrets.DOCKERHUB_USERNAME }}"
#    - name: "Build and push"
#      uses: docker/build-push-action@v2
#      with:
#        context: "."
#        push: true
#        tags: "anuj7sharma/spring-boot-security:latest"